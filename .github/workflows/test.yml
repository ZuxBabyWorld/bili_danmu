name: Test

on:
  push:
    branches:
    - '**'
    - '!master'

jobs:
  u-build:
    name: build_ubuntu_go${{ matrix.go }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go: [ '1.15' ]
    steps:
    - name: Set up Go${{ matrix.go }}
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go }}

    - name: Check out code
      uses: actions/checkout@v2
    
    - name: Build
      run: |
        sudo apt-get install libgtk-3-dev libcairo2-dev libglib2.0-dev
        go get github.com/gotk3/gotk3@master
        go build -v -buildmode=exe -tags gtk_3_22 -o demo/demo.run -i demo/main.go
      
    - name: zip
      run: zip -q -r ubuntu_go${{ matrix.go }}.zip *
      
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2.2.0
      with:
        path: ./ubuntu_go${{ matrix.go }}.zip
        
  w-build:
    name: build_windows_go${{ matrix.go }}
    runs-on: windows-latest
    strategy:
      matrix:
        go: [ '1.15' ]
    steps:
    - name: Set up Go${{ matrix.go }}
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go }}
      
    - name: Set up C
      run: |
        echo "C:\msys64\mingw64\bin" >> $GITHUB_PATH

    - name: Set up Gtk
      uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        path-type: inherit
        update: true
        install: 'mingw-w64-x86_64-gtk3 mingw-w64-x86_64-gtk2'

    - name: Check out code
      uses: actions/checkout@v2
            
    - name: Build
      shell: msys2 {0}
      run: |
        go get github.com/gotk3/gotk3@master
        go build -v -buildmode=exe -tags gtk_3_22 -o demo/demo.exe -i demo/main.go
        
    - name: zip
      run: .\7za.exe a -r .\windows_go${{ matrix.go }}.zip ./
      
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2.2.0
      with:
        path: ./windows_go${{ matrix.go }}.zip
